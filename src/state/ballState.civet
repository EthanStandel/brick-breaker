{ createSignal } from "solid-js"
{ playerState } from "./playerState.civet"
{ screenState } from "./screenState.civet"

ballWidth := playerState.paddleHeight() * 2
ballRadius := ballWidth / 2
initialVelocity := => screenState.gameContainerSize()
[balls, setBalls] := createSignal [{ index: 0 }]
[livingBalls, setLivingBalls] := createSignal balls().length
addABall := =>
  setBalls [...balls(), { index: balls()[balls().length - 1].index + 1 }] 
  setLivingBalls livingBalls() + 1

export ballState := {
  ballWidth
  ballRadius
  initialVelocity
  balls
  setBalls
  livingBalls
  setLivingBalls
  addABall
  reset: =>
    setBalls [{ index: 0 }]
    setLivingBalls balls().length
}