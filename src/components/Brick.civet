{ Component } from "solid-js"
{ brickState, BrickVariant } from "../state/brickState.civet"

export Brick: Component<{ id: number; health: number; variant: BrickVariant }> := (props) =>
  y := brickState.getTopOfBrick props.id
  x := brickState.getLeftOfBrick props.id
  <div style={do
    color := if props.variant is "unbreakable" then "black" else "white"
    background := if props.variant is "unbreakable" then "white" else "black"
    display := if props.health is 0 then "none" else "flex"
    borderPattern := if props.health > 1 then "solid" else "dotted"
    {
      position: "absolute"
      top: `${brickState.brickTop()}px`
      left: `${brickState.brickLeft()}px`
      transform: `translateX(${x}px) translateY(${y}px)`
      width: `${brickState.brickWidth() - brickState.brickBorder * 2}px`
      height: `${brickState.brickHeight() - brickState.brickBorder * 2}px`
      border: `${brickState.brickBorder}px ${borderPattern} ${color}`
      display
      "justify-content": "center"
      "align-items": "center"
      color
      "font-weight": "bold"
      "font-size": `${brickState.brickHeight() - brickState.brickBorder * 2}px`
      background
      "z-index": 3
    }
  }>{if props.variant is "unbreakable" then "âˆž" else props.health}