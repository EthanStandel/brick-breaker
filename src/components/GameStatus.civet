{ Component, Show } from "solid-js"
{ globalEvent } from "../utils/globalEvent.civet"
{ gameState } from "../state/gameState.civet"

export GameStatus: Component := =>
  globalEvent "keydown", (({ key }) => if key is "Escape" then gameState.pauseOrReset())

  <div style={
    position: "fixed"
    top: "25px"
    left: "25px"
    color: "white"
    "font-size": "50px"
    "text-shadow": "0 0 10px black"
    "user-select": "none"
  }>{gameState.score()}
  <Show when={gameState.gameStopped()}>
    <div style={
      position: "fixed"
      top: "50%"
      left: "50%"
      transform: "translate(-50%, -50%)"
      color: "white"
      "font-size": "min(20vh, 20vw)"
      "text-shadow": "0 0 10px black"
      "user-select": "none"
      "z-index": 5
    }>{gameState.gameStatus()}
  <button 
    style={
      all: "unset"
      cursor: "pointer"
      position: "fixed"
      top: "25px"
      right: "25px"
    }
    onClick=gameState.pauseOrReset>
    <svg width="50" height="50">
      <Show when={gameState.gameStatus() is not "PLAYING"}>
        <polygon points="5,0 45,25 5,50" fill="white" />
      <Show when={gameState.gameStatus() is "PLAYING"}>
        <rect x="0" y="0" width="20" height="50" fill="white" />
        <rect x="30" y="00" width="20" height="50" fill="white" />